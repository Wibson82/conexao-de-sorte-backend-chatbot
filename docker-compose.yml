
services:
  chatbot:
    image: ghcr.io/wibson82/conexao-de-sorte-backend-chatbot:latest
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - CHATBOT_LOG_LEVEL=INFO
      - LOGGING_LEVEL_ROOT=INFO
      # Database Configuration
      - DATABASE_HOST=conexao-mysql
      - DATABASE_PORT=3306
      - DATABASE_NAME=conexao_de_sorte
      - DATABASE_USERNAME=conexao
      # Secrets via Docker Secrets
      - DATABASE_PASSWORD_FILE=/run/secrets/DATABASE_PASSWORD
    secrets:
      - conexao-de-sorte-database-r2dbc-url
      - conexao-de-sorte-database-username
      - conexao-de-sorte-database-password
      - DATABASE_PASSWORD
      - conexao-de-sorte-redis-host
      - conexao-de-sorte-redis-port
      - conexao-de-sorte-redis-password
      - conexao-de-sorte-redis-database
      - conexao-de-sorte-jwt-issuer
      - conexao-de-sorte-jwt-jwks-uri
      - conexao-de-sorte-server-port
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8092/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    networks:
      conexao-network-swarm:
        aliases:
          - conexao-chatbot
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M
    # ==========================================================================
    # üè∑Ô∏è LABELS PARA INTEGRA√á√ÉO COM GATEWAY - NOVO PADR√ÉO
    # ==========================================================================
    labels:
      # Habilitar descoberta pelo Gateway (n√£o mais diretamente pelo Traefik)
      - "traefik.enable=false"  # Gateway ser√° o ponto de entrada
      - "gateway.enable=true"   # Descoberta pelo Gateway
      - "gateway.service.name=conexao-chatbot"
      - "gateway.service.port=8087"
      - "gateway.service.path=/rest/chatbot"
      - "gateway.health.path=/actuator/health"

      # Network para comunica√ß√£o interna
      - "com.docker.network.name=conexao-network-swarm"

      # Metadata do servi√ßo
      - "org.opencontainers.image.title=Conex√£o de Sorte - Chatbot IA"
      - "org.opencontainers.image.description=Microservi√ßo de chatbot e IA para jogo do bicho"
      - "org.opencontainers.image.version=1.0.0"
      - "microservice.type=business"
      - "microservice.category=ai-chat"
    volumes:
      - chatbot-logs:/app/logs

networks:
  conexao-network-swarm:
    external: true

volumes:
  chatbot-logs:

secrets:
  conexao-de-sorte-database-r2dbc-url:
    external: true
  conexao-de-sorte-database-username:
    external: true
  conexao-de-sorte-database-password:
    external: true
  conexao-de-sorte-redis-host:
    external: true
  conexao-de-sorte-redis-port:
    external: true
  conexao-de-sorte-redis-password:
    external: true
  conexao-de-sorte-redis-database:
    external: true
  conexao-de-sorte-jwt-issuer:
    external: true
  conexao-de-sorte-jwt-jwks-uri:
    external: true
  conexao-de-sorte-server-port:
    external: true
  DATABASE_PASSWORD:
    external: true
    name: DATABASE_PASSWORD
