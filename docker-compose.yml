
services:
  chatbot-service:
    image: ghcr.io/wibson82/conexao-de-sorte-backend-chatbot:latest
    restart: unless-stopped
    environment:
      - SPRING_PROFILES_ACTIVE=production
      # Conex√£o √† infraestrutura compartilhada (vari√°veis padronizadas)
      - REDIS_HOST=${REDIS_HOST:-conexao-redis}
      - REDIS_PORT=${REDIS_PORT:-6379}
      - REDIS_DATABASE=${REDIS_DATABASE:-5}
      - CONEXAO_DE_SORTE_SERVER_PORT=${CONEXAO_DE_SORTE_SERVER_PORT:-8092}
      # JWT (Resource Server)
      - JWT_ISSUER=${JWT_ISSUER:-https://auth.conexaodesorte.com.br/realms/conexao-de-sorte}
      - JWT_JWKS_URI=${JWT_JWKS_URI:-https://auth.conexaodesorte.com.br/realms/conexao-de-sorte/protocol/openid-connect/certs}
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8092/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    networks:
      conexao-network-swarm:
        aliases:
          - conexao-chatbot
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M
    # ==========================================================================
    # üè∑Ô∏è LABELS PARA INTEGRA√á√ÉO COM GATEWAY - NOVO PADR√ÉO
    # ==========================================================================
    labels:
      # Habilitar descoberta pelo Gateway (n√£o mais diretamente pelo Traefik)
      - "traefik.enable=false"  # Gateway ser√° o ponto de entrada
      - "gateway.enable=true"   # Descoberta pelo Gateway
      - "gateway.service.name=conexao-chatbot"
      - "gateway.service.port=8087"
      - "gateway.service.path=/rest/chatbot"
      - "gateway.health.path=/actuator/health"

      # Network para comunica√ß√£o interna
      - "com.docker.network.name=conexao-network-swarm"

      # Metadata do servi√ßo
      - "org.opencontainers.image.title=Conex√£o de Sorte - Chatbot IA"
      - "org.opencontainers.image.description=Microservi√ßo de chatbot e IA para jogo do bicho"
      - "org.opencontainers.image.version=1.0.0"
      - "microservice.type=business"
      - "microservice.category=ai-chat"
    volumes:
      - chatbot-logs:/app/logs

networks:
  conexao-network-swarm:
    external: true

volumes:
  chatbot-logs:
