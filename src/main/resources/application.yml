# ===============================================================================
# CHATBOT JOGO DO BICHO MICROSERVICE - BETTING SYSTEM CONFIGURATION  
# ===============================================================================
# Sistema reativo de apostas para Jogo do Bicho
# Integração completa com JWT, R2DBC e WebFlux
# Spring Boot 3.5.5 Compatible
# ===============================================================================

spring:
  application:
    name: conexao-de-sorte-chatbot
    
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:local}
  
  # Configtree secret management para Spring Boot 3.5.5
  config:
    import:
      - optional:configtree:/etc/secrets/azure/
      - optional:configtree:/mnt/secrets/
      - optional:file:./secrets.properties
      
  # Jackson configuration para Spring Boot 3.5.5
  jackson:
    time-zone: America/Sao_Paulo
    locale: pt_BR
    default-property-inclusion: non_null
    date-format: yyyy-MM-dd'T'HH:mm:ss.SSSXXX
    serialization:
      write-dates-as-timestamps: false
      fail-on-empty-beans: false
    deserialization:
      fail-on-unknown-properties: false
      
  # R2DBC Database configuration for reactive betting system
  r2dbc:
    url: ${SPRING_R2DBC_URL:r2dbc:postgresql://localhost:5432/conexao_sorte_jogo_bicho}
    username: ${SPRING_R2DBC_USERNAME:${SPRING_DATASOURCE_USERNAME:jogo_bicho_user}}
    password: ${SPRING_R2DBC_PASSWORD:${SPRING_DATASOURCE_PASSWORD:}}
    pool:
      initial-size: 5
      max-size: 20
      max-idle-time: 30m
      validation-query: "SELECT 1"
      max-acquire-time: 5s
      max-create-connection-time: 30s
      max-life-time: 60m
      
  # Flyway for migrations (Spring Boot 3.5.5)
  flyway:
    enabled: true
    url: ${SPRING_DATASOURCE_JDBC_URL:${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/conexao_sorte_jogo_bicho}}
    user: ${SPRING_DATASOURCE_USERNAME:jogo_bicho_user}
    password: ${SPRING_DATASOURCE_PASSWORD:}
    locations: classpath:db/migration
    baseline-on-migrate: true
    validate-on-migrate: false
    sql-migration-suffixes: .sql
    baseline-version: 1
    
  # Redis for betting sessions and cache (Spring Boot 3.5.5)
  data:
    redis:
      host: ${SPRING_DATA_REDIS_HOST:localhost}
      port: ${SPRING_DATA_REDIS_PORT:6379}
      password: ${SPRING_DATA_REDIS_PASSWORD:}
      database: ${SPRING_DATA_REDIS_DATABASE:5}
      timeout: 5s
      connect-timeout: 10s
      lettuce:
        pool:
          max-active: 15
          max-idle: 6
          min-idle: 2
          max-wait: -1ms
    
  # Security JWT for token validation (Spring Boot 3.5.5)
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: ${JWT_JWKS_URI:http://localhost:8081/.well-known/jwks.json}
          issuer-uri: ${JWT_ISSUER:https://auth.conexaodesorte.com}
          audiences: ${JWT_AUDIENCE:conexao-de-sorte}
          
  # WebFlux configuration (Spring Boot 3.5.5)
  webflux:
    base-path: /rest/v1/jogo-bicho
    multipart:
      max-in-memory-size: 1MB
      max-disk-usage-per-part: 10MB

# Server configuration (Spring Boot 3.5.5)
server:
  port: ${SERVER_PORT:8087}
  shutdown: graceful
  error:
    include-message: never
    include-binding-errors: never
    include-stacktrace: never
    include-exception: false
  netty:
    connection-timeout: 20s
    h2c-max-content-length: 0B
    initial-buffer-size: 128B
    max-initial-line-length: 4096B
    validate-headers: true
  
  # SSL/TLS Configuration (Spring Boot 3.5.5)
  ssl:
    enabled: ${SSL_ENABLED:false}
    key-store: ${SSL_KEYSTORE_PATH:}
    key-store-password: ${SSL_KEYSTORE_PASSWORD:}
    key-store-type: PKCS12
    protocol: TLS
    enabled-protocols: [TLSv1.2, TLSv1.3]

# Jogo do Bicho specific configuration
jogo-bicho:
  # Betting system configuration
  apostas:
    valor-minimo: ${APOSTAS_VALOR_MINIMO:1.00}
    valor-maximo: ${APOSTAS_VALOR_MAXIMO:1000.00}
    limite-diario-usuario: ${APOSTAS_LIMITE_DIARIO:5000.00}
    horarios-permitidos:
      - "08:00"  # Matinal
      - "11:00"  # Vespertino  
      - "14:00"  # Tarde
      - "18:00"  # Noturno
      - "21:00"  # Especial
    
  # Game rules configuration
  regras:
    grupos:
      total: 25  # Grupos de 01 a 25
      animais-por-grupo: 4
    
    dezenas:
      minima: 00
      maxima: 99
      
    centenas:
      minima: 000
      maxima: 999
      
    milhares:
      minima: 0000
      maxima: 9999
  
  # Payout configuration
  premiacao:
    grupo: ${PREMIO_GRUPO:18.0}  # 18x o valor apostado
    dezena: ${PREMIO_DEZENA:60.0}  # 60x o valor apostado
    centena: ${PREMIO_CENTENA:600.0}  # 600x o valor apostado
    milhar: ${PREMIO_MILHAR:4000.0}  # 4000x o valor apostado
    duque: ${PREMIO_DUQUE:300.0}
    terno: ${PREMIO_TERNO:6000.0}
    quadra: ${PREMIO_QUADRA:50000.0}
    quina: ${PREMIO_QUINA:120000.0}
  
  # Session management
  sessao:
    timeout: ${SESSAO_TIMEOUT:900s}  # 15 minutos
    max-apostas-simultaneas: ${MAX_APOSTAS_SIMULTANEAS:10}
    
  # Security settings for betting
  seguranca:
    validacao-integridade: ${VALIDACAO_INTEGRIDADE:true}
    auditoria-apostas: ${AUDITORIA_APOSTAS:true}
    limite-tentativas-falhas: ${LIMITE_TENTATIVAS:5}
    bloqueio-temporario: ${BLOQUEIO_TEMPORARIO:300s}  # 5 minutos

# Security headers (máxima proteção para sistema de apostas)
security:
  headers:
    content-security-policy: "default-src 'self'; script-src 'self'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; connect-src 'self'; frame-ancestors 'none'; base-uri 'self'; form-action 'self'"
    x-content-type-options: nosniff
    x-frame-options: DENY
    x-xss-protection: "1; mode=block"
    strict-transport-security: "max-age=31536000; includeSubDomains; preload"
    referrer-policy: "strict-origin-when-cross-origin"

# CORS Configuration (restritivo para apostas)
cors:
  allowed-origins: ${CORS_ALLOWED_ORIGINS:https://apostas.conexaodesorte.com,https://admin.conexaodesorte.com}
  allowed-methods: ${CORS_ALLOWED_METHODS:GET,POST,PUT,DELETE,OPTIONS}
  allowed-headers: ${CORS_ALLOWED_HEADERS:Authorization,Content-Type,X-Requested-With,Accept,Origin}
  allow-credentials: ${CORS_ALLOW_CREDENTIALS:true}
  max-age: ${CORS_MAX_AGE:1800}

# Rate Limiting (rigoroso para apostas)
rate-limit:
  enabled: ${RATE_LIMIT_ENABLED:true}
  default-requests-per-minute: ${RATE_LIMIT_DEFAULT:30}  # Baixo limite para apostas
  endpoints:
    "/rest/v1/jogo-bicho/apostas":
      requests-per-minute: ${RATE_LIMIT_APOSTAS:10}
      burst-capacity: ${RATE_LIMIT_APOSTAS_BURST:15}
    "/rest/v1/jogo-bicho/resultados":
      requests-per-minute: ${RATE_LIMIT_RESULTADOS:60}
      burst-capacity: ${RATE_LIMIT_RESULTADOS_BURST:100}

# Actuator configuration (Spring Boot 3.5.5)
management:
  endpoints:
    web:
      exposure:
        include: ${MANAGEMENT_ENDPOINTS_INCLUDE:health,info,metrics,prometheus}
      base-path: /actuator
      cors:
        allowed-origins: ${MANAGEMENT_CORS_ORIGINS:https://admin.conexaodesorte.com}
        allowed-methods: GET
        
  endpoint:
    health:
      show-details: ${MANAGEMENT_HEALTH_SHOW_DETAILS:when-authorized}
      show-components: ${MANAGEMENT_HEALTH_SHOW_COMPONENTS:when-authorized}
      probes:
        enabled: true
      group:
        readiness:
          include: readinessState,db,redis
        liveness:
          include: livenessState,ping
          
  health:
    livenessstate:
      enabled: true
    readinessstate:
      enabled: true
        
  metrics:
    tags:
      service: conexao-de-sorte-chatbot
      environment: ${SPRING_PROFILES_ACTIVE:prod}
    distribution:
      percentiles-histogram:
        "[http.server.requests]": true
      percentiles:
        "[http.server.requests]": 0.5, 0.95, 0.99
      slo:
        "[http.server.requests]": 10ms, 50ms, 100ms, 200ms, 500ms
        
  # Prometheus configuration (Spring Boot 3.5.5)
  prometheus:
    metrics:
      export:
        enabled: ${MANAGEMENT_PROMETHEUS_ENABLED:true}

# Logging configuration (Spring Boot 3.5.5)
logging:
  level:
    root: ${LOGGING_LEVEL_ROOT:INFO}
    "[br.tec.facilitaservicos.chatbot]": ${LOGGING_LEVEL_APP:INFO}
    "[org.springframework.security]": ${LOGGING_LEVEL_SECURITY:INFO}
    "[org.springframework.r2dbc]": ${LOGGING_LEVEL_R2DBC:INFO}
    "[org.springframework.web.reactive]": ${LOGGING_LEVEL_WEBFLUX:INFO}
    "[org.springframework.data.redis]": ${LOGGING_LEVEL_REDIS:INFO}
    
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} %5p [%t] %-40.40logger{39} [%X{traceId:-},%X{spanId:-}] : %m%n"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} %5p [%t] %-40.40logger{39} [%X{traceId:-},%X{spanId:-}] [%X{apostaId:-}] [%X{usuario:-}] : %m%n"
    
  file:
    name: ${LOGGING_FILE_NAME:./logs/conexao-de-sorte-chatbot.log}
    
  logback:
    rollingpolicy:
      max-file-size: ${LOGGING_LOGBACK_MAX_FILE_SIZE:100MB}
      max-history: ${LOGGING_LOGBACK_MAX_HISTORY:90}
      total-size-cap: ${LOGGING_LOGBACK_TOTAL_SIZE_CAP:1GB}

# OpenAPI Documentation (Spring Boot 3.5.5)
springdoc:
  api-docs:
    enabled: ${SPRINGDOC_API_DOCS_ENABLED:true}
    path: /v3/api-docs
  swagger-ui:
    enabled: ${SPRINGDOC_SWAGGER_UI_ENABLED:false}
    path: /swagger-ui.html
    config-url: /v3/api-docs/swagger-config
    urls-primary-name: conexao-de-sorte-chatbot
  show-actuator: ${SPRINGDOC_SHOW_ACTUATOR:false}
  default-consumes-media-type: application/json
  default-produces-media-type: application/json

---
# Development Profile (Spring Boot 3.5.5)
spring:
  config:
    activate:
      on-profile: dev
      
  r2dbc:
    url: r2dbc:postgresql://localhost:5432/conexao_sorte_jogo_bicho_dev
    
  flyway:
    url: jdbc:postgresql://localhost:5432/conexao_sorte_jogo_bicho_dev
    
  data:
    redis:
      database: 5  # Padronizado para DB 5
    
jogo-bicho:
  apostas:
    valor-minimo: 0.50
    limite-diario-usuario: 1000.00
    
springdoc:
  swagger-ui:
    enabled: true
    
logging:
  level:
    root: INFO
    "[br.tec.facilitaservicos.chatbot]": DEBUG
    "[org.springframework.r2dbc]": DEBUG
    "[org.springframework.web.reactive]": DEBUG

server:
  port: 8087

---
# Test Profile (Spring Boot 3.5.5)
spring:
  config:
    activate:
      on-profile: test
      
  r2dbc:
    url: r2dbc:h2:mem:///jogo_bicho_test;DB_CLOSE_DELAY=-1;MODE=PostgreSQL
    username: sa
    password: ""
    
  flyway:
    enabled: false
    
  data:
    redis:
      host: localhost
      port: 6379
      database: 5
      timeout: 1s
    
jogo-bicho:
  apostas:
    horarios-permitidos: []
  seguranca:
    validacao-integridade: false
    auditoria-apostas: false
    
logging:
  level:
    root: WARN
    "[br.tec.facilitaservicos.chatbot]": DEBUG

management:
  endpoint:
    health:
      show-details: always

---
# Production Profile (Spring Boot 3.5.5)
spring:
  config:
    activate:
      on-profile: prod
      
  r2dbc:
    url: ${SPRING_R2DBC_URL}
    username: ${SPRING_R2DBC_USERNAME:${SPRING_DATASOURCE_USERNAME}}
    password: ${SPRING_R2DBC_PASSWORD:${SPRING_DATASOURCE_PASSWORD}}
    
  flyway:
    url: ${SPRING_DATASOURCE_JDBC_URL:${SPRING_DATASOURCE_URL}}
    user: ${SPRING_DATASOURCE_USERNAME}
    password: ${SPRING_DATASOURCE_PASSWORD}
    
server:
  port: 8087
  ssl:
    enabled: ${SSL_ENABLED:false}
    
jogo-bicho:
  seguranca:
    validacao-integridade: true
    auditoria-apostas: true
    
management:
  endpoint:
    health:
      show-details: when-authorized
      
logging:
  level:
    root: INFO
    "[br.tec.facilitaservicos.chatbot]": INFO
    
rate-limit:
  default-requests-per-minute: 15

---
# Local Development Profile (Spring Boot 3.5.5)
spring:
  config:
    activate:
      on-profile: local
      
  r2dbc:
    url: r2dbc:h2:mem:///jogo_bicho_local;DB_CLOSE_DELAY=-1;MODE=PostgreSQL
    username: sa
    password: ""
    
  flyway:
    enabled: false
    
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: http://localhost:8081/.well-known/jwks.json
          issuer-uri: http://localhost:8081
          
  data:
    redis:
      database: 5
          
jogo-bicho:
  apostas:
    valor-minimo: 0.50
    limite-diario-usuario: 1000.00
    horarios-permitidos: []
    
  seguranca:
    validacao-integridade: false
    auditoria-apostas: false
    
server:
  port: 8087
  ssl:
    enabled: false
    
springdoc:
  swagger-ui:
    enabled: true
    
logging:
  level:
    root: INFO
    "[br.tec.facilitaservicos.chatbot]": DEBUG
    "[org.springframework.r2dbc]": DEBUG
    
management:
  endpoint:
    health:
      show-details: always
